{"version":3,"sources":["alex1.png","alex2.png","alex3.png","anna1.png","anna2.png","anna3.png","grandma1.png","grandma2.png","grandpa1.png","kevin1.png","kevin2.png","kids1.png","kids2.png","kids3.png","kids4.png","kids5.png","leo1.png","leo2.png","leo3.png","leo4.png","leo5.png","zoe1.png","zoe2.png","zoe3.png","zoe4.png","App.js","serviceWorker.js","index.js"],"names":["module","exports","__webpack_require__","p","SIZE","TIME","CELL","window","innerWidth","IDS","alex1","alex2","alex3","anna1","anna2","anna3","grandma1","grandma2","grandpa1","kevin1","kevin2","kids1","kids2","kids3","kids4","kids5","leo1","leo2","leo3","leo4","leo5","zoe1","zoe2","zoe3","zoe4","shuffle","a","j","x","i","length","Math","floor","random","newGrid","ids","select","k","n","list","oddsWeWantNth","answer","push","duplicateID","grid","row","y","id","data","selected","color","pic","deselect","map","cell","Object","objectSpread","stringDisplay","s","react_default","createElement","className","onCellClick","setGrid","score","setScore","pausing","setPausing","_iteratorNormalCompletion","_didIteratorError","_iteratorError","undefined","_step","_iterator","Symbol","iterator","next","done","value","_iteratorNormalCompletion2","_didIteratorError2","_iteratorError2","_step2","_iterator2","err","return","getSelectedID","Boolean","location","hostname","match","ReactDOM","render","_useState","useState","_useState2","slicedToArray","_useState3","_useState4","_useState5","_useState6","time","setTime","_useState7","_useState8","setTimeout","rowIndex","key","cellIndex","style","borderColor","height","width","backgroundColor","onClick","src","alt","display","alignItems","justifyContent","flexDirection","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.8c87f849.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/alex1.82e8381c.png\";","module.exports = __webpack_public_path__ + \"static/media/alex2.378c3540.png\";","module.exports = __webpack_public_path__ + \"static/media/alex3.1ab4e383.png\";","module.exports = __webpack_public_path__ + \"static/media/anna1.3b14ebd9.png\";","module.exports = __webpack_public_path__ + \"static/media/anna2.4632fca0.png\";","module.exports = __webpack_public_path__ + \"static/media/anna3.a8f5c8d5.png\";","module.exports = __webpack_public_path__ + \"static/media/grandma1.709c9752.png\";","module.exports = __webpack_public_path__ + \"static/media/grandma2.9599238a.png\";","module.exports = __webpack_public_path__ + \"static/media/grandpa1.74fb33f6.png\";","module.exports = __webpack_public_path__ + \"static/media/kevin1.2febeb1e.png\";","module.exports = __webpack_public_path__ + \"static/media/kevin2.c4c27dae.png\";","module.exports = __webpack_public_path__ + \"static/media/kids1.40d3d68e.png\";","module.exports = __webpack_public_path__ + \"static/media/kids2.975d96b2.png\";","module.exports = __webpack_public_path__ + \"static/media/kids3.16e6a502.png\";","module.exports = __webpack_public_path__ + \"static/media/kids4.31dc4aff.png\";","module.exports = __webpack_public_path__ + \"static/media/kids5.a9ed2bee.png\";","module.exports = __webpack_public_path__ + \"static/media/leo1.d246b464.png\";","module.exports = __webpack_public_path__ + \"static/media/leo2.d53d8f0d.png\";","module.exports = __webpack_public_path__ + \"static/media/leo3.1da47e6a.png\";","module.exports = __webpack_public_path__ + \"static/media/leo4.5bd6d692.png\";","module.exports = __webpack_public_path__ + \"static/media/leo5.7c0a35ca.png\";","module.exports = __webpack_public_path__ + \"static/media/zoe1.d401e882.png\";","module.exports = __webpack_public_path__ + \"static/media/zoe2.fe0bfd1d.png\";","module.exports = __webpack_public_path__ + \"static/media/zoe3.c26b20bd.png\";","module.exports = __webpack_public_path__ + \"static/media/zoe4.bc76a349.png\";","import React, { useState } from \"react\";\nimport \"./App.css\";\n\nimport alex1 from \"./alex1.png\";\nimport alex2 from \"./alex2.png\";\nimport alex3 from \"./alex3.png\";\nimport anna1 from \"./anna1.png\";\nimport anna2 from \"./anna2.png\";\nimport anna3 from \"./anna3.png\";\nimport grandma1 from \"./grandma1.png\";\nimport grandma2 from \"./grandma2.png\";\nimport grandpa1 from \"./grandpa1.png\";\nimport kevin1 from \"./kevin1.png\";\nimport kevin2 from \"./kevin2.png\";\nimport kids1 from \"./kids1.png\";\nimport kids2 from \"./kids2.png\";\nimport kids3 from \"./kids3.png\";\nimport kids4 from \"./kids4.png\";\nimport kids5 from \"./kids5.png\";\nimport leo1 from \"./leo1.png\";\nimport leo2 from \"./leo2.png\";\nimport leo3 from \"./leo3.png\";\nimport leo4 from \"./leo4.png\";\nimport leo5 from \"./leo5.png\";\nimport zoe1 from \"./zoe1.png\";\nimport zoe2 from \"./zoe2.png\";\nimport zoe3 from \"./zoe3.png\";\nimport zoe4 from \"./zoe4.png\";\n\nlet SIZE = 4;\nlet TIME = 45;\nlet CELL = 150;\nif (window.innerWidth < 700) {\n  CELL = 50;\n}\n\n// Let the ids be a bunch of possible colors\nlet IDS = [\n  alex1,\n  alex2,\n  alex3,\n  anna1,\n  anna2,\n  anna3,\n  grandma1,\n  grandma2,\n  grandpa1,\n  kevin1,\n  kevin2,\n  kids1,\n  kids2,\n  kids3,\n  kids4,\n  kids5,\n  leo1,\n  leo2,\n  leo3,\n  leo4,\n  leo5,\n  zoe1,\n  zoe2,\n  zoe3,\n  zoe4\n];\n\n// Copied from SO\nfunction shuffle(a) {\n  var j, x, i;\n  for (i = a.length - 1; i > 0; i--) {\n    j = Math.floor(Math.random() * (i + 1));\n    x = a[i];\n    a[i] = a[j];\n    a[j] = x;\n  }\n  return a;\n}\n\n// Randomly selects k things from the first n elements of the list, no duplicates.\n// Always returns in the same order\nfunction select(k, n, list) {\n  if (k <= 0 || n <= 0) {\n    return [];\n  }\n  let oddsWeWantNth = k / n;\n  if (Math.random() > oddsWeWantNth) {\n    // We don't want the nth item on the list\n    return select(k, n - 1, list);\n  } else {\n    // We do want the nth item on the list\n    let answer = select(k - 1, n - 1, list);\n    answer.push(list[n - 1]);\n    return answer;\n  }\n}\n\nfunction newGrid() {\n  let numCells = SIZE * SIZE;\n\n  // Make a list of ids where one of them is a duplicate\n  let ids = select(numCells - 1, IDS.length, IDS);\n  shuffle(ids);\n  let duplicateID = ids[0];\n  ids.push(duplicateID);\n  shuffle(ids);\n\n  let grid = [];\n  for (let x = 0; x < SIZE; x++) {\n    let row = [];\n    for (let y = 0; y < SIZE; y++) {\n      let index = x * SIZE + y;\n      let id = ids[index];\n      let data = {\n        x: x,\n        y: y,\n        id: id,\n        selected: false\n      };\n      if (id[0] === \"#\") {\n        data.color = id;\n      } else {\n        data.pic = id;\n      }\n      row.push(data);\n    }\n    grid.push(row);\n  }\n  return grid;\n}\n\nfunction deselect(grid) {\n  return grid.map(row =>\n    row.map(cell => {\n      return { ...cell, selected: false };\n    })\n  );\n}\n\nfunction getSelectedID(grid) {\n  for (let row of grid) {\n    for (let cell of row) {\n      if (cell.selected) {\n        return cell.id;\n      }\n    }\n  }\n  return null;\n}\n\nfunction stringDisplay(s) {\n  return (\n    <div className=\"Spacer\">\n      <div className=\"Spacer\">\n        <p>{s}</p>\n      </div>\n      <div className=\"Spacer\" />\n      <div className=\"Spacer\" />\n      <div className=\"Spacer\" />\n    </div>\n  );\n}\n\nfunction onCellClick(\n  cell,\n  grid,\n  setGrid,\n  score,\n  setScore,\n  pausing,\n  setPausing\n) {\n  // Deselecting\n  if (cell.selected) {\n    cell.selected = false;\n    setGrid(deselect(grid));\n    return;\n  }\n\n  // Selecting\n  let current = getSelectedID(grid);\n  if (current !== cell.id) {\n    let newGrid = deselect(grid);\n    newGrid[cell.x][cell.y].selected = true;\n    setGrid(newGrid);\n    return;\n  }\n\n  // Winning\n  setScore(score + 1);\n  setGrid(newGrid());\n}\n\nexport default function render() {\n  let [grid, setGrid] = useState(null);\n  let [score, setScore] = useState(null);\n  let [time, setTime] = useState(null);\n  let [pausing, setPausing] = useState(false);\n\n  if (grid != null) {\n    setTimeout(() => {\n      if (time > 1) {\n        setTime(time - 1);\n      } else {\n        // Time up\n        setPausing(true);\n        setGrid(null);\n        setTimeout(() => {\n          setPausing(false);\n        }, 1000);\n      }\n    }, 1000);\n\n    return (\n      <div className=\"App\">\n        {stringDisplay(score)}\n        <div className=\"Game\">\n          {grid.map((row, rowIndex) => {\n            return (\n              <div className=\"Row\" key={rowIndex}>\n                {row.map((cell, cellIndex) => {\n                  let style = {\n                    borderColor: cell.selected ? \"#FFFFFF\" : \"#000000\",\n                    height: CELL + \"px\",\n                    width: CELL + \"px\"\n                  };\n                  if (cell.color) {\n                    style.backgroundColor = cell.color;\n                  }\n                  return (\n                    <div\n                      className=\"Cell\"\n                      key={cellIndex}\n                      style={style}\n                      onClick={() =>\n                        onCellClick(cell, grid, setGrid, score, setScore)\n                      }\n                    >\n                      {cell.pic ? (\n                        <img\n                          src={cell.pic}\n                          height={CELL}\n                          width={CELL}\n                          alt=\"pic\"\n                        />\n                      ) : null}\n                    </div>\n                  );\n                })}\n              </div>\n            );\n          })}\n        </div>\n        {stringDisplay(time)}\n      </div>\n    );\n  }\n\n  // Getting started screen\n  return (\n    <div\n      className=\"App\"\n      onClick={() => {\n        if (pausing) {\n          return;\n        }\n        setScore(0);\n        setTime(TIME);\n        setGrid(newGrid());\n      }}\n    >\n      <header\n        style={{\n          display: \"flex\",\n          alignItems: \"center\",\n          justifyContent: \"center\",\n          flexDirection: \"column\"\n        }}\n      >\n        {score === null ? (\n          <p>Welcome to KIDRUSH</p>\n        ) : (\n          <p>Your score was {score}.</p>\n        )}\n        <p>Find as many matches as you can before time runs out.</p>\n        <p>Tap anywhere to begin!</p>\n      </header>\n    </div>\n  );\n}\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}